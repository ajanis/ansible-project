---

- name: get ansible user info
  getent:
    database: passwd
    key: "{{ ansible_user }}"

- name: set ansible user home directory
  set_fact:
    ansible_user_homedir: "{{ getent_passwd[ansible_user][4] }}"

- name: Create ansible user ssh directory
  file:
    path: "{{ ansible_user_homedir }}/.ssh"
    state: directory
    owner: root
    mode: 0600

- name: Copy ansible user ssh config
  copy:
    owner: root
    mode: 0755
    dest: "{{ ansible_user_homedir }}/.ssh/config"
    content: |
      StrictHostKeyChecking no
      UserKnownHostsFile /dev/null

- name: Copy github checkout key to server
  copy:
    mode: 0600
    owner: root
    content: "{{ github_deploy_key }}"
    dest: "{{ ansible_user_homedir }}/.ssh/id_rsa"

#- name: Check out default ansible project
#  git:
#    repo:  "{{ ansible_hostbuild_project }}"
#    dest: "{{ awx_project_data_dir }}/hostbuild"
#    key_file: "{{ ansible_user_homedir }}/.ssh/id_rsa"
#  tags:
#    - projectclone
#
#- name: Install required ansible modules
#  command: ansible-galaxy install -r requirements.yml -p .
#  args:
#    chdir: "{{ awx_project_data_dir }}/hostbuild/roles"
#  tags:
#    - projectclone
#
#- name: Install required ansible collections
#  command: ansible-galaxy collection install -r requirements.yml -p .
#  args:
#    chdir: "{{ awx_project_data_dir }}/hostbuild/collections"
#  tags:
#    - projectclone

- name: Update Tower Settings
  awx.awx.tower_settings:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    validate_certs: no
    tower_host: "{{ awx_web_url }}"
    tower_username: "{{ awx_admin_user }}"
    tower_password: "{{ awx_admin_password }}"
  loop: "{{ tower_config_settings }}"
  when:
    - tower_config_settings is defined
    - tower_config_settings != None

- name: Add email notification
  tower_notification:
    name: ansible-notification
    notification_type: email
    username: "{{ vault_email_user }}"
    password: "{{ vault_email_password }}"
    sender: "{{ vault_email_user }}"
    recipients:
      - "{{ awx_notification_email }}"
    host: "{{ vault_email_server }}"
    port: 587
    use_tls: yes
    use_ssl: no
    state: present
    validate_certs: no
    tower_host: "{{ awx_web_url }}"
    tower_username: "{{ awx_admin_user }}"
    tower_password: "{{ awx_admin_password }}"
  when:
    - awx_notification_email is defined
    - awx_notification_email != 'None'
